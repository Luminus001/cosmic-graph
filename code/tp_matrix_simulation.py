# tp_matrix_simulation.py

import networkx as nx
import matplotlib.pyplot as plt

def build_tp_graph():
    G = nx.Graph()

    # –î–æ–¥–∞—î–º–æ –∞—Ç–æ–º (–°–æ–Ω—Ü–µ) —Ç–∞ –ø–ª–∞–Ω–µ—Ç–∏ —è–∫ –≤–µ—Ä—à–∏–Ω–∏
    G.add_node("‚òÄÔ∏è –°–æ–Ω—Ü–µ", layer="–∞—Ç–æ–º")
    planets = ["–ú–µ—Ä–∫—É—Ä—ñ–π", "–í–µ–Ω–µ—Ä–∞", "–ó–µ–º–ª—è", "–ú–∞—Ä—Å", "–Æ–ø—ñ—Ç–µ—Ä", "–°–∞—Ç—É—Ä–Ω", "–£—Ä–∞–Ω", "–ù–µ–ø—Ç—É–Ω"]

    for planet in planets:
        G.add_node(planet, layer="–ø–ª–∞–Ω–µ—Ç–∞")
        G.add_edge("‚òÄÔ∏è –°–æ–Ω—Ü–µ", planet)

    # –î–æ–¥–∞—î–º–æ —Å—É–ø—É—Ç–Ω–∏–∫–∏ –ó–µ–º–ª—ñ –π –Æ–ø—ñ—Ç–µ—Ä–∞ —è–∫ "–Ω–µ–π—Ç—Ä–æ–Ω–∏"
    moons = {
        "–ó–µ–º–ª—è": ["–ú—ñ—Å—è—Ü—å"],
        "–Æ–ø—ñ—Ç–µ—Ä": ["–Ü–æ", "–Ñ–≤—Ä–æ–ø–∞", "–ì–∞–Ω—ñ–º–µ–¥", "–ö–∞–ª–ª—ñ—Å—Ç–æ"]
    }

    for planet, moon_list in moons.items():
        for moon in moon_list:
            G.add_node(moon, layer="—Å—É–ø—É—Ç–Ω–∏–∫")
            G.add_edge(planet, moon)

    return G

def visualize_tp_graph(G):
    pos = nx.spring_layout(G, seed=42)
    layers = nx.get_node_attributes(G, 'layer')

    colors = {
        "–∞—Ç–æ–º": "#FFD700",        # –∑–æ–ª–æ—Ç–µ –°–æ–Ω—Ü–µ
        "–ø–ª–∞–Ω–µ—Ç–∞": "#1E90FF",     # —Å–∏–Ω—ñ –ø–ª–∞–Ω–µ—Ç–∏
        "—Å—É–ø—É—Ç–Ω–∏–∫": "#A9A9A9",    # —Å—ñ—Ä—ñ —Å—É–ø—É—Ç–Ω–∏–∫–∏
    }

    node_colors = [colors.get(layers.get(node, ""), "#ccc") for node in G.nodes]

    nx.draw(G, pos, with_labels=True, node_color=node_colors, node_size=1000, font_size=10)
    plt.title("üåå TP-–≥—Ä–∞—Ñ –°–æ–Ω—è—á–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏")
    plt.show()

if __name__ == "__main__":
    G = build_tp_graph()
    visualize_tp_graph(G)
